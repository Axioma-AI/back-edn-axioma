services:
  # Servicio del backend
  backend:
    build:
      context: . # Ruta al directorio donde se encuentra el Dockerfile
      dockerfile: Dockerfile.backend # Nombre del Dockerfile
    container_name: fastapi_app
    ports:
      - "80:50001" # Mapea el puerto 8000 del contenedor al puerto 8000 local
    environment:
      SERVICE_NAME: ${SERVICE_NAME}
      K_REVISION: ${K_REVISION}
      LOG_LEVEL: ${LOG_LEVEL}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      VECTOR_DATABASE_HOST: ${VECTOR_DATABASE_HOST}
      VECTOR_DATABASE_PORT: ${VECTOR_DATABASE_PORT}
      FIREBASE_TYPE: ${FIREBASE_TYPE}
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_PRIVATE_KEY_ID: ${FIREBASE_PRIVATE_KEY_ID}
      FIREBASE_PRIVATE_KEY: ${FIREBASE_PRIVATE_KEY}
      FIREBASE_CLIENT_EMAIL: ${FIREBASE_CLIENT_EMAIL}
      FIREBASE_CLIENT_ID: ${FIREBASE_CLIENT_ID}
      FIREBASE_AUTH_URI: ${FIREBASE_AUTH_URI}
      FIREBASE_TOKEN_URI: ${FIREBASE_TOKEN_URI}
      FIREBASE_AUTH_PROVIDER_X509_CERT_URL: ${FIREBASE_AUTH_PROVIDER_X509_CERT_URL}
      FIREBASE_CLIENT_X509_CERT_URL: ${FIREBASE_CLIENT_X509_CERT_URL}
      FIREBASE_UNIVERSE_DOMAIN: ${FIREBASE_UNIVERSE_DOMAIN}
      FIREBASE_DATABASE_URL: ${FIREBASE_DATABASE_URL}

#     # networks:
#     #   sorteador:
#     #     ipv4_address: ${HOST_BACKEND} # Utiliza la variable de entorno para definir la IP del contenedor app

# # Definici√≥n de redes personalizadas
# networks:
#   sorteador:
#     # driver: ${NETWORK_DRIVER}  # Utiliza la variable de entorno NETWORK_DRIVER
#     # driver_opts:
#     #   parent: ${PARENT}  # Utiliza la variable de entorno PARENT
#     ipam:
#       config:
#         - subnet: ${SUBNET}  # Utiliza la variable de entorno SUBNET
#           gateway: ${GATEWAY}  # Utiliza la variable de entorno GATEWAY
